@startuml
'https://plantuml.com/class-diagram

package Parte1{
class Humano extends Thread{
    - Mundo mundo
    - String id
    - Boolean atacado
    - Boolean vivo
    +Humano(String id, Mundo mundo)
    +run():void
    +setAtacado():void
    +setMuerto():void
    +getHumanoId():String
    +zonaComun():int
    +zonaExterior(int zona):void
    +zonaComedor():void
}


class Zombie extends Thread{
    - Mundo mundo
    - String id
    - int contadorMuertes
    +Zombie(String id, Mundo mundo)
    +getZombieId():String
    +run():void
}

class Mundo{
    ~HelloController controlador
    -Refugio refugio
    -List<List<Humano>> zonasInseguras
    ~ArrayList<Lock> tuneles
    ~ArrayList<CyclicBarrier> barreras
    +Mundo(HelloController controlador)
    +getRefugio():Refugio
    +atacar_Humano(Zombie zombie,Humano presa):Boolean


}

class Logs{
    -Logs instancia
    -Logger logger
    + «synchronized» getInstancia():Logs
    + «synchronized» logInfo(String mensaje): void
    + «synchronized» logWarning(String mensaje): void
    +getLogger():Logger
    }

class Comida{
 -JTextArea tf
 -int comida=0
 +Comida(JTextArea tf)
 +getComida():int
 +setComida(int comida):void
 + «synchronized» comer(Humano humano):void
 }
}
package Parte2{
class Cliente{
-Boolean pausado=false
+main(String[] args):void
+actualizar_humanos_zonas_inseg(DataInputStream entrada, DataOutputStream salida,Interfaz in): void
+actualizar_humanos_refugio(DataInputStream entrada, DataOutputStream salida, Interfaz in): void
+actualizar_zombies_zonas_inseg(DataInputStream entrada, DataOutputStream salida, Interfaz in): void
+actualizar_humanos_tuneles(DataInputStream entrada, DataOutputStream salida, Interfaz in):void
+actualizar_ranking_zombis(DataInputStream entrada, DataOutputStream salida, Interfaz in): void
}

class Interfaz{
- JLabel lblHumanosRefugio
-JLabel[] lblHumanosTuneles
-JLabel[] lblZombisZonas
-JLabel[] lblHumanosZonas
-JTextArea txtTopZombis
-JButton btnPausarReanudar

+ Interfaz(int x, int y): void
}
class Servidor{
+main(args: String[]): void
}
}


package com_example_pecl_zombis{
class Boton extends StackPane{
    - Font fuente
    - Text text
    +Boton(String name, int width))
    +setOnAction(Runnable action): void
    }
class Cajas extends Pane{
    - VBox box
    +Cajas()
    +setOnAction(Runnable action): void
    +addItems(Boton... items):void
    +addItem(Boton item):void
    }
class HelloController{
    -Label welcomeText
    +onHelloButtonClick():void
    }
class Inicio extends Application{
    +start(Stage stage):void
    +main(String[] args):void
    }
class ListaZonasH{
    -ArrayList<Humano> lista
    -JTextArea tf
    +ListaZonasH(JTextArea tf)
    + «synchronized» meterH(Humano t):void
    + «synchronized» sacar(Humano t):void
    + «synchronized» getLista():ArrayList<Humano>
    + imprimir():void
    }
class ListaZonasZ{
    -ArrayList<Zombie> lista
    -JTextArea tf
    +ListaZonasZ(JTextArea tf)
    + «synchronized» meterH(Zombie t):void
    + «synchronized» sacar(Zombie t):void
    + «synchronized» getLista():ArrayList<Zombie>
    + imprimir():void
    }

class PantallaPrincipal{
    +PantallaPrincipal()
}







@enduml
@startuml
'https://plantuml.com/class-diagram

package Parte1{
class Humano extends Thread{
    - Mundo mundo
    - String id
    - Boolean atacado
    - Boolean vivo
    +Humano(String id, Mundo mundo)
    +run():void
    +setAtacado():void
    +setMuerto():void
    +getHumanoId():String
    +zonaComun():int
    +zonaExterior(int zona):void
    +zonaComedor():void
    +pausar_si_pausado():void
}


class Zombie extends Thread{
    - Mundo mundo
    - String id
    - int contadorMuertes
    +Zombie(String id, Mundo mundo)
    +getZombieId():String
    +run():void
    +pausar_si_pausado():void
}

class Mundo{
    - ArrayList<JTextArea> zonasEntradaTunelText
    - ArrayList<JTextArea> zonasSalidaTunelText
    - ArrayList<JTextArea> zonasTunelText
    - JTextArea DescansoText
    - JTextArea ComedorText
    - JTextArea zonaComunText
    - JTextArea ComidaText
    - ArrayList<JTextArea> zonasExtTextH
    - ArrayList<JTextArea> zonasExtTextZ
    - ListaZonasH Descanso
    - ListaZonasH comedor
    - ListaZonasH zonaComun
    - List<ListaZonasH> zonasEntradaTunel
    - List<ListaZonasH> zonasSalidaTunel
    - List<ListaZonasH> zonasTunel
    - List<ListaZonasH> zonasInseguras
    - List<ListaZonasZ> zonasInsegurasZ
    - ArrayList<Semaphore> tuneles
    - ArrayList<Humano> humanos
    - ArrayList<Zombie> zombis
    - ArrayList<CyclicBarrier> barrerasTuneles
    - Comida comida
    - int[] esperandoEntrada

    # static volatile boolean pausado

    +Mundo(HelloController controlador)
    +getRefugio():Refugio
    +atacar_Humano(Zombie zombie,Humano presa):Boolean
    +getZonasInsegurasZ(int zona): ListaZonasZ
    +getComida():Comida
    +getContador_Humanos(int zona):List<Humano>
    +crearTextArea(Font font,int alto, int ancho): JTextArea
    +initComponents():void
    +wrapScroll(JTextArea area,int alto, int ancho): JScrollPane
    +isPausado():boolean
    +setPausado(boolean pausado):void
    +getNumeroHumanosTuneles(int zona):int
    +getNumeroZombisZonasInseguras():int[]
    +getNumeroHumanosRefugio():int
    +getRankingZombis():List<Zombie>
    + getDescanso(): ListaZonasH
     + getComedor(): ListaZonasH
     + getZonaComun(): ListaZonasH
     + getZonasEntradaTunel(): List<ListaZonasH>
     + getZonasSalidaTunel(): List<ListaZonasH>
     + getZonasTunel(): List<ListaZonasH>
     + getZonasInseguras(): List<ListaZonasH>
     + getZonasInsegurasZ(): List<ListaZonasZ>
     + getTuneles(): ArrayList<Semaphore>
     + getHumanos(): ArrayList<Humano>
     + getZombis(): ArrayList<Zombie>
     + getBarrerasTuneles(): ArrayList<CyclicBarrier>
     + getEsperandoEntrada(): int[]


}

class Logs{
    -Logs instancia
    -Logger logger
    + «synchronized» getInstancia():Logs
    + «synchronized» logInfo(String mensaje): void
    + «synchronized» logWarning(String mensaje): void
    +getLogger():Logger
    }

class Comida{
 -JTextArea tf
 -int comida=0
 +Comida(JTextArea tf)
 +getComida():int
 +setComida(int comida):void
 + «synchronized» comer(Humano humano):void
 }
}
package Parte2{
class Cliente{
-ServidorInterfaz servidor
-int pausado = 0
+main(String[] args):void
+getServidor():ServidorInterfaz
+getPausado():int

}

class Interfaz{
- JLabel lblHumanosRefugio
-JLabel[] lblHumanosTuneles
-JLabel[] lblZombisZonas
-JLabel[] lblHumanosZonas
-JTextArea txtTopZombis
-JButton btnPausarReanudar

+ Interfaz(int x, int y): void
+ getLblHumanosRefugio(): JLabel
+ getLblHumanosTuneles(): JLabel[]
+ getLblZombisZonas(): JLabel[]
+ getLblHumanosZonas(): JLabel[]
+ getTxtTopZombis(): JTextArea
+ getBtnPausar(): JButton
+ getBtnReanudar(): JButton
}
class Servidor implements ServidorInterfaz{
-Mundo mundo
+Servidor(Mundo mundo)
+getNumeroHumanosRefugio(): int
+getNumeroHumanosZonasInseguras(): int[]
+getNumeroZombisZonasInseguras(): int[]
+getNumeroHumanosTuneles(): int[]
+getRankingZombiesLetales(): String[]
+pausar():void
+reanudar():void
}

interface ServidorInterfaz extends Remote{
+getNumeroHumanosRefugio(): int
+getNumeroHumanosZonasInseguras(): int[]
+getNumeroZombisZonasInseguras(): int[]
+getNumeroHumanosTuneles(): int[]
+getRankingZombiesLetales(): String[]
+pausar():void
+reanudar():void
}
}


package com_example_pecl_zombis{
class Boton extends StackPane{
    - Font fuente
    - Text text
    +Boton(String name, int width))
    +setOnAction(Runnable action): void
    }
class Cajas extends Pane{
    - VBox box
    +Cajas()
    +setOnAction(Runnable action): void
    +addItems(Boton... items):void
    +addItem(Boton item):void
    }
class HelloController{
    -Label welcomeText
    +onHelloButtonClick():void
    }
class Inicio extends Application{
    +start(Stage stage):void
    +main(String[] args):void
    }
class ListaZonasH{
    -ArrayList<Humano> lista
    -JTextArea tf
    +ListaZonasH(JTextArea tf)
    + «synchronized» meterH(Humano t):void
    + «synchronized» sacar(Humano t):void
    + «synchronized» getLista():ArrayList<Humano>
    + imprimir():void
    }
class ListaZonasZ{
    -ArrayList<Zombie> lista
    -JTextArea tf
    +ListaZonasZ(JTextArea tf)
    + «synchronized» meterH(Zombie t):void
    + «synchronized» sacar(Zombie t):void
    + «synchronized» getLista():ArrayList<Zombie>
    + imprimir():void
    }

class PantallaPrincipal{
    +PantallaPrincipal()
}







@enduml